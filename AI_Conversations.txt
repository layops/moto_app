Django Channels ile WebSocket Yapılandırması:

chat/routing.py dosyasını hazırladık, WebSocket URL desenlerini yazdık.

Daphne ile ASGI sunucusunu başlattın.

Redis’in çalıştığını kontrol ettin (pong cevabı aldın).

Bildirim Sistemi Üzerinde Çalıştık:

Test bildirimi göndermek için Django management command (send_test_notification) kullandın.

Bildirimlerin doğru kullanıcıya gönderildiğini ve WebSocket bağlantısının kurulduğunu test ettik.

Redis’in Windows Üzerindeki Komut Desteği Sorunu:

Windows üzerinde Redis’in bazı komutları desteklemediğini ve BZPOPMIN hatası verdiğini gördük.

Bu yüzden WSL (Windows Subsystem for Linux) kurulumu yaptık.

WSL Üzerinde Geliştirme Ortamı Kurduk:

Ubuntu dağıtımı üzerinden Redis’i ve PostgreSQL’i kurduk.

WSL içinde Python virtual environment (venv) oluşturduk.

Django projesini WSL içinde çalıştırdık.

PostgreSQL Kurulumu ve Yapılandırması:

PostgreSQL için kullanıcı ve veritabanı oluşturduk (motoapp_user ve motoapp_db).

Django ayarlarında veritabanı bağlantı bilgilerini güncelledik.

Migration işlemlerini başarıyla yaptık.

Django superuser oluşturduk.

Token Bazlı Bildirim Testi Yaptık:

Yeni kullanıcı için token oluşturduk.

Bu token ile gerçek zamanlı bildirim göndermeyi test ettik.

Projeyi Stabil Çalışır Hale Getirdik:

Tüm servisleri (Django, Redis, PostgreSQL) WSL üzerinde stabil şekilde çalıştırdık.

Bildirim sisteminin çalıştığını teyit ettik.